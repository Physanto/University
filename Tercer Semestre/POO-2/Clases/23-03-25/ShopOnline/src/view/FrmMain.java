/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ProductManager;
import java.awt.Color;
import javax.swing.JOptionPane;
import model.Category;
import model.Product;

/**
 *
 * @author initmanfig
 */
public class FrmMain extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FrmMain.class.getName());
    private ProductManager productManager;
    
    /**
     * Creates new form FrmMain
     */
    public FrmMain() {
        initComponents();
        txtCodeUpdate.setVisible(false);
        btnUpdateProduct.setVisible(false);
        addItems();
        productManager = new ProductManager();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        cbxCategory = new javax.swing.JComboBox<>();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnClean = new javax.swing.JButton();
        lblImage = new javax.swing.JLabel();
        txtCodeUpdate = new javax.swing.JTextField();
        btnUpdateProduct = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("FrmMain");
        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblTitle.setText("GESTION PRODUCTOS");

        txtCode.setBackground(new java.awt.Color(255, 255, 255));
        txtCode.setFont(new java.awt.Font("JetBrainsMono NF", 0, 14)); // NOI18N
        txtCode.setForeground(new java.awt.Color(153, 153, 153));
        txtCode.setText("Codigo");
        txtCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodeFocusLost(evt);
            }
        });

        jTextField1.setBackground(new java.awt.Color(255, 255, 255));

        txtName.setBackground(new java.awt.Color(255, 255, 255));
        txtName.setFont(new java.awt.Font("JetBrainsMono NF", 0, 14)); // NOI18N
        txtName.setForeground(new java.awt.Color(153, 153, 153));
        txtName.setText("Nombre");
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });

        txtPrice.setBackground(new java.awt.Color(255, 255, 255));
        txtPrice.setFont(new java.awt.Font("JetBrainsMono NF", 0, 14)); // NOI18N
        txtPrice.setForeground(new java.awt.Color(153, 153, 153));
        txtPrice.setText("Precio");
        txtPrice.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPriceFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPriceFocusLost(evt);
            }
        });

        txtStock.setBackground(new java.awt.Color(255, 255, 255));
        txtStock.setFont(new java.awt.Font("JetBrainsMono NF", 0, 14)); // NOI18N
        txtStock.setForeground(new java.awt.Color(153, 153, 153));
        txtStock.setText("Stock");
        txtStock.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtStockFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtStockFocusLost(evt);
            }
        });

        cbxCategory.setBackground(new java.awt.Color(255, 255, 255));
        cbxCategory.setFont(new java.awt.Font("JetBrainsMono NF", 0, 14)); // NOI18N
        cbxCategory.setForeground(new java.awt.Color(0, 0, 0));
        cbxCategory.setName("cbxCategory"); // NOI18N

        btnUpdate.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdate.setForeground(new java.awt.Color(0, 0, 0));
        btnUpdate.setText("Actualizar");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setForeground(new java.awt.Color(0, 0, 0));
        btnDelete.setText("Eliminar");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(255, 255, 255));
        btnAdd.setForeground(new java.awt.Color(0, 0, 0));
        btnAdd.setText("Agregar");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClean.setBackground(new java.awt.Color(255, 255, 255));
        btnClean.setForeground(new java.awt.Color(0, 0, 0));
        btnClean.setText("Limpiar");
        btnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCleanActionPerformed(evt);
            }
        });

        lblImage.setIcon(new javax.swing.ImageIcon("/home/initmanfig/Downloads/tienda (1).png")); // NOI18N

        txtCodeUpdate.setBackground(new java.awt.Color(255, 255, 255));
        txtCodeUpdate.setFont(new java.awt.Font("JetBrainsMono NF", 0, 14)); // NOI18N
        txtCodeUpdate.setForeground(new java.awt.Color(102, 102, 102));
        txtCodeUpdate.setText("nuevo Codigo");
        txtCodeUpdate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodeUpdateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodeUpdateFocusLost(evt);
            }
        });

        btnUpdateProduct.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdateProduct.setForeground(new java.awt.Color(0, 0, 0));
        btnUpdateProduct.setText("Actualizar Producto");
        btnUpdateProduct.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 0)));
        btnUpdateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProductActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(167, 167, 167)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(18, 18, 18)
                                .addComponent(btnAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtStock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCode, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtCodeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(13, 13, 13))
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(btnClean))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                                .addComponent(lblImage)
                                .addGap(111, 111, 111))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btnUpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCodeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19)
                .addComponent(txtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbxCategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnAdd)
                    .addComponent(btnClean))
                .addContainerGap(153, Short.MAX_VALUE))
        );

        cbxCategory.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodeFocusGained
   
        txtCode.setText("");
        txtCode.setForeground(Color.black);
    }//GEN-LAST:event_txtCodeFocusGained

    private void txtCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodeFocusLost
        if (txtCode.getText().isEmpty()) {
            txtCode.setText("Codigo");
            txtCode.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtCodeFocusLost

    private void txtNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusGained
        txtName.setText("");
        txtName.setForeground(Color.black);
    }//GEN-LAST:event_txtNameFocusGained

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        if (txtName.getText().isEmpty()) {
            txtName.setText("Nombre");
            txtName.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtNameFocusLost

    private void txtPriceFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusGained
        txtPrice.setText("");
        txtPrice.setForeground(Color.black);
    }//GEN-LAST:event_txtPriceFocusGained

    private void txtPriceFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPriceFocusLost
        if (txtPrice.getText().isEmpty()) {
            txtPrice.setText("Precio");
            txtPrice.setForeground(Color.gray);
        }
    }//GEN-LAST:event_txtPriceFocusLost

    private void txtStockFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStockFocusGained
        txtStock.setText("");
        txtStock.setForeground(Color.black);
    }//GEN-LAST:event_txtStockFocusGained

    private void btnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCleanActionPerformed
        txtCode.setText("Codigo");
        txtCode.setForeground(Color.gray);
        txtName.setText("Nombre");
        txtName.setForeground(Color.gray);
        txtPrice.setText("Precio");
        txtPrice.setForeground(Color.gray);
        txtStock.setText("Stock");
        txtStock.setForeground(Color.gray);
    }//GEN-LAST:event_btnCleanActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        
        if(txtCode.getText().isEmpty() || txtCode.getText().equals("Codigo")){
            JOptionPane.showMessageDialog(null, "Ingresa solo el codigo del producto a eliminar", "Informacion", JOptionPane.OK_OPTION);
            return;
        }
        
        if(productManager.deleteProduct(txtCode.getText())){
            JOptionPane.showMessageDialog(null, "Producto eliminado correctamente", "Informacion", JOptionPane.OK_OPTION);
        }
        else{
            JOptionPane.showMessageDialog(null, "Producto no eliminado", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(txtCode.getText().equals("Codigo") || txtCode.getText().isEmpty()){
           JOptionPane.showMessageDialog(null, "Ingresa el codigo del producto", "Informacion", JOptionPane.INFORMATION_MESSAGE);
           return;
        }
        
        Product product = productManager.searchProduct(txtCode.getText());
        
        if(product != null){
            txtCode.setEnabled(false);
            txtCodeUpdate.setVisible(true);
            txtCodeUpdate.getParent().revalidate();
            txtCodeUpdate.getParent().repaint();
            
            JOptionPane.showMessageDialog(null, "Ingresa la informacion del producto actualizar", "Informacion", JOptionPane.OK_OPTION);
            txtName.setText("Nombre");
            txtName.setForeground(Color.gray);
            txtPrice.setText("Precio");
            txtPrice.setForeground(Color.gray);
            txtStock.setText("Stock");
            txtStock.setForeground(Color.gray);
            btnUpdateProduct.setVisible(true);
            btnUpdate.setVisible(false);
        }
        else{
            JOptionPane.showMessageDialog(null, "Producto no actualizado", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private boolean validateData(){
        return (txtCode.getText().isEmpty() || txtCode.getText().equals("Codigo")) ||
           (txtName.getText().isEmpty() || txtName.getText().equals("Nombre")) ||
           (txtPrice.getText().isEmpty() || txtPrice.getText().equals("Precio")) ||
           (txtStock.getText().isEmpty() || txtStock.getText().equals("Stock"));
    }
    
    private void txtCodeUpdateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodeUpdateFocusGained
        txtCodeUpdate.setText("");
        txtCodeUpdate.setForeground(Color.black);
    }//GEN-LAST:event_txtCodeUpdateFocusGained

    private void txtCodeUpdateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodeUpdateFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodeUpdateFocusLost

    private void btnUpdateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProductActionPerformed
        
        if(validateData()) {
            JOptionPane.showMessageDialog(null, "Ingresa la informacion del producto a actualizar", "Informacion", JOptionPane.OK_OPTION);
            return;
        }
        
        if(!onlyNumbers(txtPrice.getText()) || !onlyNumbers(txtStock.getText())){
            JOptionPane.showMessageDialog(null, "no puedes ingresar en precio o stock letras", "Informacion", JOptionPane.OK_OPTION);
            return;
        }
        
        productManager.updateProduct(new Product(txtCodeUpdate.getText(), txtName.getText(), Double.parseDouble(txtPrice.getText()), 
                    Integer.parseInt(txtStock.getText()), (Category)cbxCategory.getSelectedItem()), txtCode.getText());
            JOptionPane.showMessageDialog(null, "Producto actualizado correctamente", "Informacion", JOptionPane.OK_OPTION);
        txtCode.setEnabled(true); 
        btnUpdateProduct.setVisible(false);
        txtCodeUpdate.setVisible(false);
        btnUpdate.setVisible(true);
        txtCode.setText("Codigo");
        txtCode.setForeground(Color.gray);
        txtName.setText("Nombre");
        txtName.setForeground(Color.gray);
        txtPrice.setText("Precio");
        txtPrice.setForeground(Color.gray);
        txtStock.setText("Stock");
        txtStock.setForeground(Color.gray); 
    }//GEN-LAST:event_btnUpdateProductActionPerformed

    
    private void txtStockFocusLost(java.awt.event.FocusEvent evt) {
        if (txtStock.getText().isEmpty()) {
            txtStock.setText("Stock");
            txtStock.setForeground(Color.gray);
        }
    }                                  

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {
        
        if(validateData()){
            JOptionPane.showMessageDialog(null, "Ingresa la informacion del producto a actualizar", "Informacion", JOptionPane.OK_OPTION);
            return;
        }
        
        if(!onlyNumbers(txtPrice.getText()) || !onlyNumbers(txtStock.getText())){
            JOptionPane.showMessageDialog(null, "no puedes ingresar en precio o stock letras", "Informacion", JOptionPane.OK_OPTION);
            return;
        }
        
        productManager.addProduct(new Product(txtCode.getText(), txtName.getText(), Double.parseDouble(txtPrice.getText()), 
                Integer.parseInt(txtStock.getText()), (Category)cbxCategory.getSelectedItem()));
        
        JOptionPane.showMessageDialog(null, "Producto agregado correctamente", "Informacion", JOptionPane.OK_OPTION);

        txtCode.setText("Codigo");
        txtCode.setForeground(Color.gray);
        txtName.setText("Nombre");
        txtName.setForeground(Color.gray);
        txtPrice.setText("Precio");
        txtPrice.setForeground(Color.gray);
        txtStock.setText("Stock");
        txtStock.setForeground(Color.gray);   
    }
    
    private boolean onlyNumbers(String text){
        
        for(char caracter : text.trim().toCharArray()){
            if (!(Character.isDigit(caracter) || caracter == '.' || caracter == ',')) {
                return false;
            }
        }
        return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> new FrmMain().setVisible(true));     
    }
    
    private void addItems(){
        cbxCategory.addItem(new Category("001","Aseo","Productos de aseo"));
        cbxCategory.addItem(new Category("002","Tecnologia","Productos tecnolgicos"));
        cbxCategory.addItem(new Category("003","Ropa","Productos para vestir"));
        cbxCategory.addItem(new Category("004","Juegos","Productos de videojuegos"));
        cbxCategory.addItem(new Category("005","Alcohol","Productos para embriagarse"));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClean;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdateProduct;
    private javax.swing.JComboBox<Category> cbxCategory;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtCodeUpdate;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables
}
